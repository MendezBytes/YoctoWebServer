From bcba791d66ae91c4feefe3d14edf3162c43cc008 Mon Sep 17 00:00:00 2001
From: Daniel Mendez <silex93@gmail.com>
Date: Mon, 11 Dec 2023 17:52:05 -0700
Subject: [PATCH] added pg_config

---
 psycopg2.egg-info/PKG-INFO | 154 +++++++++++++++++++------------------
 setup.cfg                  |   2 +-
 setup.py                   |   3 -
 3 files changed, 81 insertions(+), 78 deletions(-)

diff --git a/psycopg2.egg-info/PKG-INFO b/psycopg2.egg-info/PKG-INFO
index f582cdb..b778457 100644
--- a/psycopg2.egg-info/PKG-INFO
+++ b/psycopg2.egg-info/PKG-INFO
@@ -1,84 +1,15 @@
-Metadata-Version: 1.2
+Metadata-Version: 2.1
 Name: psycopg2
 Version: 2.8.4
 Summary: psycopg2 - Python-PostgreSQL Database Adapter
 Home-page: http://initd.org/psycopg/
 Author: Federico Di Gregorio
 Author-email: fog@initd.org
+Maintainer: Federico Di Gregorio
+Maintainer-email: fog@initd.org
 License: LGPL with exceptions or ZPL
-Description-Content-Type: UNKNOWN
-Description: Psycopg is the most popular PostgreSQL database adapter for the Python
-        programming language.  Its main features are the complete implementation of
-        the Python DB API 2.0 specification and the thread safety (several threads can
-        share the same connection).  It was designed for heavily multi-threaded
-        applications that create and destroy lots of cursors and make a large number
-        of concurrent "INSERT"s or "UPDATE"s.
-        
-        Psycopg 2 is mostly implemented in C as a libpq wrapper, resulting in being
-        both efficient and secure.  It features client-side and server-side cursors,
-        asynchronous communication and notifications, "COPY TO/COPY FROM" support.
-        Many Python types are supported out-of-the-box and adapted to matching
-        PostgreSQL data types; adaptation can be extended and customized thanks to a
-        flexible objects adaptation system.
-        
-        Psycopg 2 is both Unicode and Python 3 friendly.
-        
-        
-        Documentation
-        -------------
-        
-        Documentation is included in the ``doc`` directory and is `available online`__.
-        
-        .. __: http://initd.org/psycopg/docs/
-        
-        For any other resource (source code repository, bug tracker, mailing list)
-        please check the `project homepage`__.
-        
-        
-        Installation
-        ------------
-        
-        Building Psycopg requires a few prerequisites (a C compiler, some development
-        packages): please check the install_ and the faq_ documents in the ``doc`` dir
-        or online for the details.
-        
-        If prerequisites are met, you can install psycopg like any other Python
-        package, using ``pip`` to download it from PyPI_::
-        
-            $ pip install psycopg2
-        
-        or using ``setup.py`` if you have downloaded the source package locally::
-        
-            $ python setup.py build
-            $ sudo python setup.py install
-        
-        You can also obtain a stand-alone package, not requiring a compiler or
-        external libraries, by installing the `psycopg2-binary`_ package from PyPI::
-        
-            $ pip install psycopg2-binary
-        
-        The binary package is a practical choice for development and testing but in
-        production it is advised to use the package built from sources.
-        
-        .. _PyPI: https://pypi.org/project/psycopg2/
-        .. _psycopg2-binary: https://pypi.org/project/psycopg2-binary/
-        .. _install: http://initd.org/psycopg/docs/install.html#install-from-source
-        .. _faq: http://initd.org/psycopg/docs/faq.html#faq-compile
-        
-        .. __: http://initd.org/psycopg/
-        
-        
-        :Linux/OSX: |travis|
-        :Windows: |appveyor|
-        
-        .. |travis| image:: https://travis-ci.org/psycopg/psycopg2.svg?branch=master
-            :target: https://travis-ci.org/psycopg/psycopg2
-            :alt: Linux and OSX build status
-        
-        .. |appveyor| image:: https://ci.appveyor.com/api/projects/status/github/psycopg/psycopg2?branch=master&svg=true
-            :target: https://ci.appveyor.com/project/psycopg/psycopg2/branch/master
-            :alt: Windows build status
-        
+Project-URL: Source, https://github.com/psycopg/psycopg2
+Project-URL: Documentation, http://initd.org/psycopg/docs/
 Platform: any
 Classifier: Development Status :: 5 - Production/Stable
 Classifier: Intended Audience :: Developers
@@ -103,3 +34,78 @@ Classifier: Topic :: Software Development :: Libraries :: Python Modules
 Classifier: Operating System :: Microsoft :: Windows
 Classifier: Operating System :: Unix
 Requires-Python: >=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*
+License-File: LICENSE
+
+Psycopg is the most popular PostgreSQL database adapter for the Python
+programming language.  Its main features are the complete implementation of
+the Python DB API 2.0 specification and the thread safety (several threads can
+share the same connection).  It was designed for heavily multi-threaded
+applications that create and destroy lots of cursors and make a large number
+of concurrent "INSERT"s or "UPDATE"s.
+
+Psycopg 2 is mostly implemented in C as a libpq wrapper, resulting in being
+both efficient and secure.  It features client-side and server-side cursors,
+asynchronous communication and notifications, "COPY TO/COPY FROM" support.
+Many Python types are supported out-of-the-box and adapted to matching
+PostgreSQL data types; adaptation can be extended and customized thanks to a
+flexible objects adaptation system.
+
+Psycopg 2 is both Unicode and Python 3 friendly.
+
+
+Documentation
+-------------
+
+Documentation is included in the ``doc`` directory and is `available online`__.
+
+.. __: http://initd.org/psycopg/docs/
+
+For any other resource (source code repository, bug tracker, mailing list)
+please check the `project homepage`__.
+
+
+Installation
+------------
+
+Building Psycopg requires a few prerequisites (a C compiler, some development
+packages): please check the install_ and the faq_ documents in the ``doc`` dir
+or online for the details.
+
+If prerequisites are met, you can install psycopg like any other Python
+package, using ``pip`` to download it from PyPI_::
+
+    $ pip install psycopg2
+
+or using ``setup.py`` if you have downloaded the source package locally::
+
+    $ python setup.py build
+    $ sudo python setup.py install
+
+You can also obtain a stand-alone package, not requiring a compiler or
+external libraries, by installing the `psycopg2-binary`_ package from PyPI::
+
+    $ pip install psycopg2-binary
+
+The binary package is a practical choice for development and testing but in
+production it is advised to use the package built from sources.
+
+.. _PyPI: https://pypi.org/project/psycopg2/
+.. _psycopg2-binary: https://pypi.org/project/psycopg2-binary/
+.. _install: http://initd.org/psycopg/docs/install.html#install-from-source
+.. _faq: http://initd.org/psycopg/docs/faq.html#faq-compile
+
+.. __: http://initd.org/psycopg/
+
+
+:Linux/OSX: |travis|
+:Windows: |appveyor|
+
+.. |travis| image:: https://travis-ci.org/psycopg/psycopg2.svg?branch=master
+    :target: https://travis-ci.org/psycopg/psycopg2
+    :alt: Linux and OSX build status
+
+.. |appveyor| image:: https://ci.appveyor.com/api/projects/status/github/psycopg/psycopg2?branch=master&svg=true
+    :target: https://ci.appveyor.com/project/psycopg/psycopg2/branch/master
+    :alt: Windows build status
+
+
diff --git a/setup.cfg b/setup.cfg
index 9ea2e1b..d8b3bfa 100644
--- a/setup.cfg
+++ b/setup.cfg
@@ -1,6 +1,6 @@
 [build_ext]
 define = 
-pg_config = 
+pg_config =/usr/bin/pg_config
 mx_include_dir = 
 have_ssl = 0
 static_libpq = 0
diff --git a/setup.py b/setup.py
index 8b8da11..48fdedd 100644
--- a/setup.py
+++ b/setup.py
@@ -409,9 +409,6 @@ For further information please check the 'doc/src/install.rst' file (also at
             self.libraries.append("pq")
 
         try:
-            self.library_dirs.append(pg_config_helper.query("libdir"))
-            self.include_dirs.append(pg_config_helper.query("includedir"))
-            self.include_dirs.append(pg_config_helper.query("includedir-server"))
             pgversion = pg_config_helper.query("version").split()[1]
 
             verre = re.compile(
